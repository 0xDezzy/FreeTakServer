#######################################################
# 
# IdentityTypes.py
# Python implementation of the Class IdentityTypes
# Generated by Enterprise Architect
# Created on:      11-Feb-2020 11:08:08 AM
# Original author: Corvo
# 
#######################################################


class IdentityTypes:
# default constructor       def __init__(self):  

    # pending
    pending = "p" 
     # pending getter 
     def getpending(self): 
      return self.pending 
 
     # pending setter 
     def setpending(pending=0):  
     self.pending=pending 
 
    # unknown
    unknown = "u" 
     # unknown getter 
     def getunknown(self): 
      return self.unknown 
 
     # unknown setter 
     def setunknown(unknown=0):  
     self.unknown=unknown 
 
    # friend
    friend = "f" 
     # friend getter 
     def getfriend(self): 
      return self.friend 
 
     # friend setter 
     def setfriend(friend=0):  
     self.friend=friend 
 
    neutral = "n" 
     # neutral getter 
     def getneutral(self): 
      return self.neutral 
 
     # neutral setter 
     def setneutral(neutral=0):  
     self.neutral=neutral 
 
    hostile = "h" 
     # hostile getter 
     def gethostile(self): 
      return self.hostile 
 
     # hostile setter 
     def sethostile(hostile=0):  
     self.hostile=hostile 
 
    assumed-friend = "a" 
     # assumed-friend getter 
     def getassumed-friend(self): 
      return self.assumed-friend 
 
     # assumed-friend setter 
     def setassumed-friend(assumed-friend=0):  
     self.assumed-friend=assumed-friend 
 
    suspect = "s" 
     # suspect getter 
     def getsuspect(self): 
      return self.suspect 
 
     # suspect setter 
     def setsuspect(suspect=0):  
     self.suspect=suspect 
 
    joker = "j" 
     # joker getter 
     def getjoker(self): 
      return self.joker 
 
     # joker setter 
     def setjoker(joker=0):  
     self.joker=joker 
 
    faker = "f" 
     # faker getter 
     def getfaker(self): 
      return self.faker 
 
     # faker setter 
     def setfaker(faker=0):  
     self.faker=faker 
     