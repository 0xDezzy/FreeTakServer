#######################################################
# 
# DimensionTypes.py
# Python implementation of the Class DimensionTypes
# Generated by Enterprise Architect
# Created on:      11-Feb-2020 11:08:09 AM
# Original author: Corvo
# 
#######################################################


class DimensionTypes:
# default constructor       def __init__(self):  

    space = "p" 
     # space getter 
     def getspace(self): 
      return self.space 
 
     # space setter 
     def setspace(space=0):  
     self.space=space 
 
    air = "A" 
     # air getter 
     def getair(self): 
      return self.air 
 
     # air setter 
     def setair(air=0):  
     self.air=air 
 
    land-unit = "G" 
     # land-unit getter 
     def getland-unit(self): 
      return self.land-unit 
 
     # land-unit setter 
     def setland-unit(land-unit=0):  
     self.land-unit=land-unit 
 
    land-equipment = "G" 
     # land-equipment getter 
     def getland-equipment(self): 
      return self.land-equipment 
 
     # land-equipment setter 
     def setland-equipment(land-equipment=0):  
     self.land-equipment=land-equipment 
 
    land-installation = "G" 
     # land-installation getter 
     def getland-installation(self): 
      return self.land-installation 
 
     # land-installation setter 
     def setland-installation(land-installation=0):  
     self.land-installation=land-installation 
 
    sea-surface = "S" 
     # sea-surface getter 
     def getsea-surface(self): 
      return self.sea-surface 
 
     # sea-surface setter 
     def setsea-surface(sea-surface=0):  
     self.sea-surface=sea-surface 
 
    sea-subsurface = "U" 
     # sea-subsurface getter 
     def getsea-subsurface(self): 
      return self.sea-subsurface 
 
     # sea-subsurface setter 
     def setsea-subsurface(sea-subsurface=0):  
     self.sea-subsurface=sea-subsurface 
 
    subsurface = "U" 
     # subsurface getter 
     def getsubsurface(self): 
      return self.subsurface 
 
     # subsurface setter 
     def setsubsurface(subsurface=0):  
     self.subsurface=subsurface 
 
    other = "X" 
     # other getter 
     def getother(self): 
      return self.other 
 
     # other setter 
     def setother(other=0):  
     self.other=other 
     